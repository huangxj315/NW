{"name": "test_qspz", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_NW.test_cases.test_gys.test_qspz.test_qfpz object at 0x00000273F67CA970>\nget_driver = <test_NW.base.base_NW.base_NW object at 0x00000273F7C10E20>\n\n    @allure.story(\"签收债权凭证\")\n    def test_qspz(self,get_driver):\n        #用户登录\n        get_driver.start_houtai(1,'供应商')\n        #获取当前用户的待办数量\n        dbnum=get_driver.get_element('mytodo', 'olddbnum').get_attribute('innerText')\n        # 点击待办业务\n        get_driver.get_element('homepage', 'mytodo_tab').click()\n        rq=get_driver.get_currentrq()\n        # 设置当前的locale为你所使用的地区的格式\n        locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')\n        amount=get_driver.get_paras('voucheramount', 1)\n        # 将字符串转换为浮点数\n        amount_float = locale.atof(amount)\n        money=int(amount_float)\n        #点击签收凭证\n        divs = get_driver.get_elements('mytodo', 'div_locator')\n        # 定义一个标志变量\n        should_break = False\n        for div in divs:\n           table = div.find_element_by_tag_name('table')\n           # 迭代每个 <table> 元素,内层循环\n           for tr in table.find_elements_by_tag_name('tr'):\n               # 获取此行中的每个单元格 <td>，并获取该单元格的文本\n               tds = tr.find_elements_by_tag_name('td')\n               if len(tds) < 2:\n                continue\n               col1_element = tds[0]  # 获取第一列元素\n               col2_element = tds[1]  # 获取第一列元素\n               last_cell = tds[-1]  # 获取最后一列元素\n               p_element1 = col1_element.find_element_by_xpath('.//p[1]')  # 在第一列的元素上查找 'p' 标签\n               p_element2 = col2_element.find_element_by_xpath('.//p[1]')  # 在第二列的元素上查找 'p' 标签\n               date = p_element1.text  # 获取第一列的 'p' 标签文本\n               loanmoney = p_element2.text  # 获取第二列的 'p' 标签文本\n               num=int(loanmoney.replace(',', '').split('.')[0])\n               # 检查第一列和第二列是否等于指定的值，如果是，则单击该行元素中的“签收凭证”按钮\n               if date == rq and num == money:\n                   last_cell.click()\n                   # 设置标志变量为 True，表示应该跳出外层循环\n                   should_break = True\n                   break\n           # 检查标志变量是否为 True，如果是，则跳出外层循环\n           if should_break:\n               break\n    \n        # 点击签署按钮\n>       get_driver.get_element('mytodo', 'jsfqianshu').click()\n\n..\\test_cases\\test_gys\\test_qspz.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\base\\base_NW.py:147: in get_element\n    e = WebDriverWait(self.driver, 20).until(lambda x: x.find_element_by_xpath(xpath))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f9c14923ed457cd9ad02e4c9d2935ee8\")>\nmethod = <function base_NW.get_element.<locals>.<lambda> at 0x00000273F7BB8040>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "失败截图", "source": "c3ac93b3-f0a5-498c-adc6-3aa99041e5b2-attachment.png", "type": "image/png"}], "start": 1705139037679, "stop": 1705139128764, "uuid": "c299953d-b9fb-4b00-81f7-ef0fe4eb278d", "historyId": "2d2cd0e0ec489ce95aeadd033a1322c1", "testCaseId": "fed458faadd7685fd4d24dff009f9ded", "fullName": "test_NW.test_cases.test_gys.test_qspz.test_qfpz#test_qspz", "labels": [{"name": "story", "value": "签收债权凭证"}, {"name": "feature", "value": "供应商-签收凭证"}, {"name": "parentSuite", "value": "test_NW.test_cases.test_gys"}, {"name": "suite", "value": "test_qspz"}, {"name": "subSuite", "value": "test_qfpz"}, {"name": "host", "value": "DESKTOP-9Q92OBR"}, {"name": "thread", "value": "9852-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_NW.test_cases.test_gys.test_qspz"}]}